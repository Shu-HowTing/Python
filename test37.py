# -*- coding: utf-8 -*-
# Author: 小狼狗
'''
===================================================
    关于几个np函数的使用：
        np.bincount
        np.flatnonzero
        np.array_split
===================================================
'''
import numpy as np

#numpy.bincount(x, weights=None, minlength=0)统计次数
# 我们可以看到x中最大的数为7，因此bin的数量为8，那么它的索引值为0->7
x = np.array([0, 1, 1, 3, 2, 1, 7])
# 索引0出现了1次，索引1出现了3次......索引5出现了0次......
np.bincount(x)
#因此，输出结果为：array([1, 3, 1, 1, 0, 0, 0, 1])
##我来解释一下weights这个参数。
# 文档说，如果weights参数被指定，那么x会被它加权，也就是说，如果值n发现在位置i，那么out[n] += weight[i]而不是out[n] += 1.
# 因此，我们weights的大小必须与x相同，否则报错
w = np.array([0.3, 0.5, 0.2, 0.7, 1., -0.6])
# 我们可以看到x中最大的数为4，因此bin的数量为5，那么它的索引值为0->4
x = np.array([2, 1, 3, 4, 4, 3])
# 索引0 -> 0
# 索引1 -> w[1] = 0.5
# 索引2 -> w[0] = 0.3
# 索引3 -> w[2] + w[5] = 0.2 - 0.6 = -0.4
# 索引4 -> w[3] + w[4] = 0.7 + 1 = 1.7
np.bincount(x,  weights=w)
# 因此，输出结果为：array([ 0. ,  0.5,  0.3, -0.4,  1.7])
#--------------------------------------------------------------------
# np.flatnonzero
# 该函数输入一个矩阵，返回扁平化后矩阵中非零元素的位置（index）
x = np.array([-2, -1,  0,  1,  2])
np.flatnonzero(x)
#array([0, 1, 3, 4])
d = np.array([1,2,3,4,4,3,5,3,6])
h = np.flatnonzero(d == 3)
print(h)    #[2 5 7]
#--------------------------------------------------------------------
#np.array_split(x, n)  将序列x分为n份
x = np.arange(8.0)
np.array_split(x, 3)
#[array([ 0.,  1.,  2.]), array([ 3.,  4.,  5.]), array([ 6.,  7.])]
















